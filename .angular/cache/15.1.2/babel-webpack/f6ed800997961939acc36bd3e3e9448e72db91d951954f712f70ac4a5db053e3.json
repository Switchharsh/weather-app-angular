{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../dataservice\";\nimport * as i2 from \"@angular/common\";\nfunction FrontpageComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h1\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h1\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"City Name: \", ctx_r1.cityName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Country Name: \", ctx_r1.countryName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Latitude: \", ctx_r1.Lat, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Lon: \", ctx_r1.Lon, \"\");\n  }\n}\nexport class FrontpageComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.Lat = 0;\n    this.dataFlag = false;\n    this.weatherFlag = false;\n  }\n  onCall(cityName) {\n    console.log('hereh');\n    this.dataService.getGeoCodeData(cityName).subscribe(data => {\n      this.dataFlag = true;\n      this.dataGeoCode = data;\n      console.log(this.dataGeoCode.results[0].name);\n      this.cityName = this.dataGeoCode.results[0].name;\n      this.countryName = this.dataGeoCode.results[0].country;\n      this.Lat = this.dataGeoCode.results[0].latitude;\n      this.Lon = this.dataGeoCode.results[0].longitude;\n    });\n    if (this.Lat != 0) {\n      this.dataService.getWeatherInfo(this.Lat, this.Lon).subscribe(data => {\n        this.weatherFlag = true;\n        this.dataWeatherCode = data;\n        console.log(this.dataWeatherCode);\n        this.tempRN = this.dataWeatherCode[0].temp2m;\n      });\n    }\n  }\n}\nFrontpageComponent.ɵfac = function FrontpageComponent_Factory(t) {\n  return new (t || FrontpageComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nFrontpageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FrontpageComponent,\n  selectors: [[\"app-frontpage\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[\"type\", \"text\", \"placeholder\", \"City Name\"], [\"city\", \"\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function FrontpageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"input\", 0, 1)(3, \"br\");\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function FrontpageComponent_Template_button_click_4_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onCall(_r0.value));\n      });\n      i0.ɵɵtext(5, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6);\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵtemplate(8, FrontpageComponent_div_8_Template, 9, 4, \"div\", 3);\n      i0.ɵɵelementStart(9, \"div\")(10, \"div\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\" \", _r0.value, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.dataGeoCode);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Weather Info \", ctx.cityName, \"\");\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nFrontpageComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FrontpageComponent,\n  factory: FrontpageComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;IAQKA,2BAAyB;IAChBA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAA6B;IAAAA,iBAAK;IACtCA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAY;IAAAA,iBAAK;;;;IAHjBA,eAAuB;IAAvBA,yDAAuB;IACvBA,eAA6B;IAA7BA,+DAA6B;IAC7BA,eAAiB;IAAjBA,mDAAiB;IACjBA,eAAY;IAAZA,8CAAY;;;ACM1B,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAGhB,QAAG,GAAQ,CAAC;IAE3B,aAAQ,GAAG,KAAK;IAAE,gBAAW,GAAY,KAAK;EALE;EAShDC,MAAM,CAACC,QAAgB;IACrBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACJ,WAAW,CAACK,cAAc,CAACH,QAAQ,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACzD,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,WAAW,GAAGF,IAAI;MACvBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;MAC7C,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACO,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MAChD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,CAACG,OAAO;MACtD,IAAI,CAACC,GAAG,GAAG,IAAI,CAACL,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,CAACK,QAAQ;MAC/C,IAAI,CAACC,GAAG,GAAG,IAAI,CAACP,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,CAACO,SAAS;IAClD,CAAC,CAAC;IACF,IAAI,IAAI,CAACH,GAAG,IAAI,CAAC,EAAE;MACjB,IAAI,CAACd,WAAW,CAACkB,cAAc,CAAC,IAAI,CAACJ,GAAG,EAAE,IAAI,CAACE,GAAG,CAAC,CAACV,SAAS,CAACC,IAAI,IAAG;QACnE,IAAI,CAACY,WAAW,GAAG,IAAI;QACvB,IAAI,CAACC,eAAe,GAAGb,IAAI;QAC3BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACgB,eAAe,CAAC;QACjC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,eAAe,CAAC,CAAC,CAAC,CAACE,MAAM;MAC9C,CAAC,CAAC;;EAEN;;AA9BWxB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDlB/B9B,2BAAK;MAEAA,8BAAiD;MAEjDA,iCAAmD;MAA7BA;QAAAA;QAAA;QAAA,OAASA,oCAAkB;MAAA,EAAC;MAACA,mBAAG;MAAAA,iBAAS;MAE/DA,YACA;MAAAA,qBAAI;MACJA,mEAKM;MAENA,2BAAK;MACKA,aAAyB;MAAAA,iBAAM;;;;MAVzCA,eACA;MADAA,0CACA;MACMA,eAAiB;MAAjBA,sCAAiB;MAQbA,eAAyB;MAAzBA,wDAAyB;;;;;;ACE3BC,kBAAkB;SAAlBA,kBAAkB;EAAA8B,SAAlB9B,kBAAkB;EAAA+B,YARjB;AAAM","names":["i0","FrontpageComponent","constructor","dataService","onCall","cityName","console","log","getGeoCodeData","subscribe","data","dataFlag","dataGeoCode","results","name","countryName","country","Lat","latitude","Lon","longitude","getWeatherInfo","weatherFlag","dataWeatherCode","tempRN","temp2m","selectors","decls","vars","consts","template","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Harsh\\Desktop\\Angular\\weather-app\\src\\app\\frontpage\\frontpage.component.html","C:\\Users\\Harsh\\Desktop\\Angular\\weather-app\\src\\app\\frontpage\\frontpage.component.ts"],"sourcesContent":["<div>\n\n     <input #city type=\"text\" placeholder=\"City Name\">\n     <br>\n     <button type=\"button\" (click)=\"onCall(city.value)\">Add</button>\n\n     {{city.value}}\n     <br>\n     <div *ngIf=\"dataGeoCode\">\n          <h1>City Name: {{cityName}}</h1>\n          <h1>Country Name: {{countryName}}</h1>\n          <h1>Latitude: {{Lat}}</h1>\n          <h1>Lon: {{Lon}}</h1>\n     </div>\n\n     <div>\n          <div>Weather Info {{cityName}}</div>\n\n     </div>\n\n</div>","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n// import{ Constants } from './config/constants'; \nimport { Injectable } from '@angular/core';\nimport { DataService } from '../dataservice';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n@Component({\n  selector: 'app-frontpage',\n  templateUrl: './frontpage.component.html',\n  styleUrls: ['./frontpage.component.css']\n})\nexport class FrontpageComponent {\n\n  constructor(private dataService: DataService) { }\n  dataGeoCode: any; dataWeatherCode: any;\n\n  cityName: any; Lat: any = 0; Lon: any; countryName: any;\n\n  dataFlag = false; weatherFlag: boolean = false;\n\n  tempRN: any;\n\n  onCall(cityName: string) {\n    console.log('hereh');\n    this.dataService.getGeoCodeData(cityName).subscribe(data => {\n      this.dataFlag = true;\n      this.dataGeoCode = data;\n      console.log(this.dataGeoCode.results[0].name);\n      this.cityName = this.dataGeoCode.results[0].name;\n      this.countryName = this.dataGeoCode.results[0].country;\n      this.Lat = this.dataGeoCode.results[0].latitude;\n      this.Lon = this.dataGeoCode.results[0].longitude;\n    });\n    if (this.Lat != 0) {\n      this.dataService.getWeatherInfo(this.Lat, this.Lon).subscribe(data => {\n        this.weatherFlag = true;\n        this.dataWeatherCode = data;\n        console.log(this.dataWeatherCode);\n        this.tempRN = this.dataWeatherCode[0].temp2m;\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}